// MAJOR.MINOR.PATCH-build.BUILD-DASH-SEPARATED-BRANCH+mc.MCVER (CI + branch)
// or
// MAJOR.MINOR.PATCH-build.BUILD+mc.MCVER (CI + no branch)
// or
// MAJOR.MINOR.PATCH-testbuild+mc.MCVER (no CI + no branch = local)
// or
// (no CI + branch = impossible)

private static def getBranch() {
    // groovy is very bad at globals, apparently.
    final REFS_PREFIX = "refs/heads/"
    var branch = System.getenv("GITHUB_REF")

    if (branch == null || !branch.startsWith(REFS_PREFIX))
        return null

    branch = branch.substring(REFS_PREFIX.length())
    branch = branch.replaceAll("/", "-")

    return branch;
}

private static def getBuildNumber() {
    return System.getenv("GITHUB_RUN_NUMBER")
}

ext.getCurrentVersion = {
    var qualifier = "build"

    var branch = getBranch()
    var build = getBuildNumber()

    if (branch == "main") {
        branch = null
    } else if (branch == "release") {
        branch = null
        qualifier = "release"
    } else if (build == null) {
        // No CI
        qualifier = "testbuild"
    }

    var version = project.mod_version + "-" + qualifier

    if (build != null)
        version += "." + build

    if (branch != null)
        version += "-" + branch

    return version + "+mc." + project.minecraft_version
}
